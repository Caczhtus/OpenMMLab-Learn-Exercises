{"env_info": "sys.platform: linux\nPython: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.3, V11.3.109\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.10.2+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.3+cu113\nOpenCV: 4.5.3\nMMCV: 1.5.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.28.1+", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=16,\n    workers_per_gpu=4,\n    train=dict(\n        type='CocoDataset',\n        ann_file='/openbayes/input/output0/balloon/train_via_region_data.json',\n        img_prefix='/openbayes/input/input0/balloon/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=('balloon', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='/openbayes/input/output0/balloon/val_via_region_data.json',\n        img_prefix='/openbayes/input/input0/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='/openbayes/input/output0/balloon/val_via_region_data.json',\n        img_prefix='/openbayes/input/input0/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 16, 32, 48])\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\ncheckpoint_config = dict(interval=2, max_keep_ckpts=2)\nlog_config = dict(interval=25, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'config/_base_/mask_rcnn_r50_fpn_fp16_1x_coco_20200205-59faf7e4.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nfp16 = dict(loss_scale=512.0)\nclasses = ('balloon', )\ndataset_root = '/openbayes/input/input0/balloon/'\nwork_dir = 'work_dirs/mask_rcnn/mask_rcnn_r50_fpn_fp16_1x16b-50e_balloon/'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 396128875, "exp_name": "mask_rcnn_r50_fpn_fp16_1x16b-50e_balloon.py"}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 0.00014, "bbox_mAP": 0.0025, "bbox_mAP_50": 0.0061, "bbox_mAP_75": 0.0011, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0017, "bbox_mAP_l": 0.0033, "bbox_mAP_copypaste": "0.0025 0.0061 0.0011 0.0000 0.0017 0.0033", "segm_mAP": 0.003, "segm_mAP_50": 0.009, "segm_mAP_75": 0.0008, "segm_mAP_s": 0.0, "segm_mAP_m": 0.0008, "segm_mAP_l": 0.0054, "segm_mAP_copypaste": "0.0030 0.0090 0.0008 0.0000 0.0008 0.0054"}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.0003, "bbox_mAP": 0.0128, "bbox_mAP_50": 0.0237, "bbox_mAP_75": 0.0109, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0425, "bbox_mAP_l": 0.012, "bbox_mAP_copypaste": "0.0128 0.0237 0.0109 0.0000 0.0425 0.0120", "segm_mAP": 0.0165, "segm_mAP_50": 0.0322, "segm_mAP_75": 0.016, "segm_mAP_s": 0.0078, "segm_mAP_m": 0.0273, "segm_mAP_l": 0.0214, "segm_mAP_copypaste": "0.0165 0.0322 0.0160 0.0078 0.0273 0.0214"}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00046, "bbox_mAP": 0.0404, "bbox_mAP_50": 0.0622, "bbox_mAP_75": 0.0424, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0653, "bbox_mAP_l": 0.0511, "bbox_mAP_copypaste": "0.0404 0.0622 0.0424 0.0000 0.0653 0.0511", "segm_mAP": 0.0482, "segm_mAP_50": 0.0736, "segm_mAP_75": 0.0532, "segm_mAP_s": 0.0048, "segm_mAP_m": 0.0416, "segm_mAP_l": 0.1647, "segm_mAP_copypaste": "0.0482 0.0736 0.0532 0.0048 0.0416 0.1647"}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00062, "bbox_mAP": 0.0816, "bbox_mAP_50": 0.1268, "bbox_mAP_75": 0.0926, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0912, "bbox_mAP_l": 0.103, "bbox_mAP_copypaste": "0.0816 0.1268 0.0926 0.0000 0.0912 0.1030", "segm_mAP": 0.1071, "segm_mAP_50": 0.1361, "segm_mAP_75": 0.1227, "segm_mAP_s": 0.0037, "segm_mAP_m": 0.0695, "segm_mAP_l": 0.3084, "segm_mAP_copypaste": "0.1071 0.1361 0.1227 0.0037 0.0695 0.3084"}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00078, "bbox_mAP": 0.148, "bbox_mAP_50": 0.2142, "bbox_mAP_75": 0.1711, "bbox_mAP_s": 0.0133, "bbox_mAP_m": 0.1178, "bbox_mAP_l": 0.1757, "bbox_mAP_copypaste": "0.1480 0.2142 0.1711 0.0133 0.1178 0.1757", "segm_mAP": 0.1777, "segm_mAP_50": 0.2189, "segm_mAP_75": 0.2045, "segm_mAP_s": 0.0097, "segm_mAP_m": 0.0969, "segm_mAP_l": 0.3189, "segm_mAP_copypaste": "0.1777 0.2189 0.2045 0.0097 0.0969 0.3189"}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00094, "bbox_mAP": 0.2608, "bbox_mAP_50": 0.3626, "bbox_mAP_75": 0.3224, "bbox_mAP_s": 0.0194, "bbox_mAP_m": 0.1997, "bbox_mAP_l": 0.2999, "bbox_mAP_copypaste": "0.2608 0.3626 0.3224 0.0194 0.1997 0.2999", "segm_mAP": 0.3113, "segm_mAP_50": 0.3635, "segm_mAP_75": 0.3566, "segm_mAP_s": 0.0125, "segm_mAP_m": 0.1483, "segm_mAP_l": 0.4742, "segm_mAP_copypaste": "0.3113 0.3635 0.3566 0.0125 0.1483 0.4742"}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.0011, "bbox_mAP": 0.4463, "bbox_mAP_50": 0.6002, "bbox_mAP_75": 0.5746, "bbox_mAP_s": 0.0673, "bbox_mAP_m": 0.3137, "bbox_mAP_l": 0.5194, "bbox_mAP_copypaste": "0.4463 0.6002 0.5746 0.0673 0.3137 0.5194", "segm_mAP": 0.5142, "segm_mAP_50": 0.5901, "segm_mAP_75": 0.583, "segm_mAP_s": 0.0133, "segm_mAP_m": 0.2558, "segm_mAP_l": 0.6966, "segm_mAP_copypaste": "0.5142 0.5901 0.5830 0.0133 0.2558 0.6966"}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00126, "bbox_mAP": 0.5577, "bbox_mAP_50": 0.747, "bbox_mAP_75": 0.7139, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.4528, "bbox_mAP_l": 0.6344, "bbox_mAP_copypaste": "0.5577 0.7470 0.7139 0.2020 0.4528 0.6344", "segm_mAP": 0.646, "segm_mAP_50": 0.7334, "segm_mAP_75": 0.7244, "segm_mAP_s": 0.0176, "segm_mAP_m": 0.4371, "segm_mAP_l": 0.7484, "segm_mAP_copypaste": "0.6460 0.7334 0.7244 0.0176 0.4371 0.7484"}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 0.00014, "bbox_mAP": 0.5677, "bbox_mAP_50": 0.7509, "bbox_mAP_75": 0.7232, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.4713, "bbox_mAP_l": 0.6436, "bbox_mAP_copypaste": "0.5677 0.7509 0.7232 0.2020 0.4713 0.6436", "segm_mAP": 0.651, "segm_mAP_50": 0.7358, "segm_mAP_75": 0.7289, "segm_mAP_s": 0.0202, "segm_mAP_m": 0.4165, "segm_mAP_l": 0.7509, "segm_mAP_copypaste": "0.6510 0.7358 0.7289 0.0202 0.4165 0.7509"}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 0.00016, "bbox_mAP": 0.5755, "bbox_mAP_50": 0.7603, "bbox_mAP_75": 0.7242, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.4648, "bbox_mAP_l": 0.6526, "bbox_mAP_copypaste": "0.5755 0.7603 0.7242 0.2020 0.4648 0.6526", "segm_mAP": 0.6564, "segm_mAP_50": 0.7451, "segm_mAP_75": 0.7381, "segm_mAP_s": 0.0204, "segm_mAP_m": 0.435, "segm_mAP_l": 0.75, "segm_mAP_copypaste": "0.6564 0.7451 0.7381 0.0204 0.4350 0.7500"}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 0.00017, "bbox_mAP": 0.5821, "bbox_mAP_50": 0.7672, "bbox_mAP_75": 0.7299, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.4867, "bbox_mAP_l": 0.6541, "bbox_mAP_copypaste": "0.5821 0.7672 0.7299 0.2020 0.4867 0.6541", "segm_mAP": 0.6647, "segm_mAP_50": 0.7514, "segm_mAP_75": 0.7442, "segm_mAP_s": 0.0199, "segm_mAP_m": 0.4709, "segm_mAP_l": 0.7556, "segm_mAP_copypaste": "0.6647 0.7514 0.7442 0.0199 0.4709 0.7556"}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 0.00019, "bbox_mAP": 0.591, "bbox_mAP_50": 0.7756, "bbox_mAP_75": 0.7351, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5081, "bbox_mAP_l": 0.6634, "bbox_mAP_copypaste": "0.5910 0.7756 0.7351 0.2020 0.5081 0.6634", "segm_mAP": 0.6749, "segm_mAP_50": 0.7578, "segm_mAP_75": 0.7506, "segm_mAP_s": 0.0177, "segm_mAP_m": 0.4888, "segm_mAP_l": 0.764, "segm_mAP_copypaste": "0.6749 0.7578 0.7506 0.0177 0.4888 0.7640"}
{"mode": "val", "epoch": 13, "iter": 13, "lr": 0.00021, "bbox_mAP": 0.6034, "bbox_mAP_50": 0.7841, "bbox_mAP_75": 0.7418, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5362, "bbox_mAP_l": 0.6743, "bbox_mAP_copypaste": "0.6034 0.7841 0.7418 0.2020 0.5362 0.6743", "segm_mAP": 0.6829, "segm_mAP_50": 0.7666, "segm_mAP_75": 0.7592, "segm_mAP_s": 0.0186, "segm_mAP_m": 0.5218, "segm_mAP_l": 0.7683, "segm_mAP_copypaste": "0.6829 0.7666 0.7592 0.0186 0.5218 0.7683"}
{"mode": "val", "epoch": 14, "iter": 13, "lr": 0.00022, "bbox_mAP": 0.6094, "bbox_mAP_50": 0.7912, "bbox_mAP_75": 0.7483, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.548, "bbox_mAP_l": 0.6756, "bbox_mAP_copypaste": "0.6094 0.7912 0.7483 0.2020 0.5480 0.6756", "segm_mAP": 0.6918, "segm_mAP_50": 0.7744, "segm_mAP_75": 0.7668, "segm_mAP_s": 0.0232, "segm_mAP_m": 0.5517, "segm_mAP_l": 0.7739, "segm_mAP_copypaste": "0.6918 0.7744 0.7668 0.0232 0.5517 0.7739"}
{"mode": "val", "epoch": 15, "iter": 13, "lr": 0.00024, "bbox_mAP": 0.6127, "bbox_mAP_50": 0.7933, "bbox_mAP_75": 0.7486, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5636, "bbox_mAP_l": 0.6764, "bbox_mAP_copypaste": "0.6127 0.7933 0.7486 0.2020 0.5636 0.6764", "segm_mAP": 0.6895, "segm_mAP_50": 0.7768, "segm_mAP_75": 0.769, "segm_mAP_s": 0.0225, "segm_mAP_m": 0.5687, "segm_mAP_l": 0.7643, "segm_mAP_copypaste": "0.6895 0.7768 0.7690 0.0225 0.5687 0.7643"}
{"mode": "val", "epoch": 16, "iter": 13, "lr": 0.00025, "bbox_mAP": 0.606, "bbox_mAP_50": 0.7953, "bbox_mAP_75": 0.724, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5705, "bbox_mAP_l": 0.6651, "bbox_mAP_copypaste": "0.6060 0.7953 0.7240 0.2020 0.5705 0.6651", "segm_mAP": 0.6916, "segm_mAP_50": 0.7791, "segm_mAP_75": 0.7711, "segm_mAP_s": 0.0226, "segm_mAP_m": 0.5865, "segm_mAP_l": 0.764, "segm_mAP_copypaste": "0.6916 0.7791 0.7711 0.0226 0.5865 0.7640"}
{"mode": "val", "epoch": 17, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.6062, "bbox_mAP_50": 0.7957, "bbox_mAP_75": 0.7241, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5705, "bbox_mAP_l": 0.6651, "bbox_mAP_copypaste": "0.6062 0.7957 0.7241 0.2020 0.5705 0.6651", "segm_mAP": 0.697, "segm_mAP_50": 0.7797, "segm_mAP_75": 0.7717, "segm_mAP_s": 0.0228, "segm_mAP_m": 0.5865, "segm_mAP_l": 0.7702, "segm_mAP_copypaste": "0.6970 0.7797 0.7717 0.0228 0.5865 0.7702"}
{"mode": "val", "epoch": 18, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.6065, "bbox_mAP_50": 0.7959, "bbox_mAP_75": 0.7242, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5689, "bbox_mAP_l": 0.6653, "bbox_mAP_copypaste": "0.6065 0.7959 0.7242 0.2020 0.5689 0.6653", "segm_mAP": 0.6977, "segm_mAP_50": 0.7807, "segm_mAP_75": 0.7726, "segm_mAP_s": 0.0227, "segm_mAP_m": 0.5952, "segm_mAP_l": 0.7703, "segm_mAP_copypaste": "0.6977 0.7807 0.7726 0.0227 0.5952 0.7703"}
{"mode": "val", "epoch": 19, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.6069, "bbox_mAP_50": 0.7966, "bbox_mAP_75": 0.7247, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6657, "bbox_mAP_copypaste": "0.6069 0.7966 0.7247 0.2020 0.5690 0.6657", "segm_mAP": 0.6981, "segm_mAP_50": 0.7812, "segm_mAP_75": 0.7732, "segm_mAP_s": 0.023, "segm_mAP_m": 0.5952, "segm_mAP_l": 0.7704, "segm_mAP_copypaste": "0.6981 0.7812 0.7732 0.0230 0.5952 0.7704"}
{"mode": "val", "epoch": 20, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.6072, "bbox_mAP_50": 0.7969, "bbox_mAP_75": 0.725, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6662, "bbox_mAP_copypaste": "0.6072 0.7969 0.7250 0.2020 0.5690 0.6662", "segm_mAP": 0.6985, "segm_mAP_50": 0.7816, "segm_mAP_75": 0.7735, "segm_mAP_s": 0.023, "segm_mAP_m": 0.5953, "segm_mAP_l": 0.771, "segm_mAP_copypaste": "0.6985 0.7816 0.7735 0.0230 0.5953 0.7710"}
{"mode": "val", "epoch": 21, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.608, "bbox_mAP_50": 0.7978, "bbox_mAP_75": 0.7257, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6672, "bbox_mAP_copypaste": "0.6080 0.7978 0.7257 0.2020 0.5690 0.6672", "segm_mAP": 0.6991, "segm_mAP_50": 0.7824, "segm_mAP_75": 0.7742, "segm_mAP_s": 0.0228, "segm_mAP_m": 0.5959, "segm_mAP_l": 0.771, "segm_mAP_copypaste": "0.6991 0.7824 0.7742 0.0228 0.5959 0.7710"}
{"mode": "val", "epoch": 22, "iter": 13, "lr": 3e-05, "bbox_mAP": 0.609, "bbox_mAP_50": 0.7982, "bbox_mAP_75": 0.7261, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6682, "bbox_mAP_copypaste": "0.6090 0.7982 0.7261 0.2020 0.5690 0.6682", "segm_mAP": 0.7005, "segm_mAP_50": 0.783, "segm_mAP_75": 0.7748, "segm_mAP_s": 0.0241, "segm_mAP_m": 0.6047, "segm_mAP_l": 0.7721, "segm_mAP_copypaste": "0.7005 0.7830 0.7748 0.0241 0.6047 0.7721"}
{"mode": "val", "epoch": 23, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.6091, "bbox_mAP_50": 0.7983, "bbox_mAP_75": 0.7262, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6683, "bbox_mAP_copypaste": "0.6091 0.7983 0.7262 0.2020 0.5690 0.6683", "segm_mAP": 0.7006, "segm_mAP_50": 0.7832, "segm_mAP_75": 0.7749, "segm_mAP_s": 0.0244, "segm_mAP_m": 0.6049, "segm_mAP_l": 0.7723, "segm_mAP_copypaste": "0.7006 0.7832 0.7749 0.0244 0.6049 0.7723"}
{"mode": "val", "epoch": 24, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.6066, "bbox_mAP_50": 0.7962, "bbox_mAP_75": 0.7193, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5678, "bbox_mAP_l": 0.6644, "bbox_mAP_copypaste": "0.6066 0.7962 0.7193 0.2020 0.5678 0.6644", "segm_mAP": 0.699, "segm_mAP_50": 0.7811, "segm_mAP_75": 0.7729, "segm_mAP_s": 0.0246, "segm_mAP_m": 0.6063, "segm_mAP_l": 0.7694, "segm_mAP_copypaste": "0.6990 0.7811 0.7729 0.0246 0.6063 0.7694"}
{"mode": "val", "epoch": 25, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.6112, "bbox_mAP_50": 0.7993, "bbox_mAP_75": 0.7218, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.568, "bbox_mAP_l": 0.6695, "bbox_mAP_copypaste": "0.6112 0.7993 0.7218 0.2020 0.5680 0.6695", "segm_mAP": 0.7045, "segm_mAP_50": 0.7842, "segm_mAP_75": 0.7759, "segm_mAP_s": 0.0244, "segm_mAP_m": 0.6109, "segm_mAP_l": 0.7747, "segm_mAP_copypaste": "0.7045 0.7842 0.7759 0.0244 0.6109 0.7747"}
{"mode": "val", "epoch": 26, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.6118, "bbox_mAP_50": 0.8005, "bbox_mAP_75": 0.722, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.569, "bbox_mAP_l": 0.6696, "bbox_mAP_copypaste": "0.6118 0.8005 0.7220 0.2020 0.5690 0.6696", "segm_mAP": 0.7054, "segm_mAP_50": 0.7856, "segm_mAP_75": 0.7772, "segm_mAP_s": 0.0243, "segm_mAP_m": 0.6109, "segm_mAP_l": 0.7748, "segm_mAP_copypaste": "0.7054 0.7856 0.7772 0.0243 0.6109 0.7748"}
{"mode": "val", "epoch": 27, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.612, "bbox_mAP_50": 0.8009, "bbox_mAP_75": 0.7221, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5678, "bbox_mAP_l": 0.6698, "bbox_mAP_copypaste": "0.6120 0.8009 0.7221 0.2020 0.5678 0.6698", "segm_mAP": 0.7057, "segm_mAP_50": 0.786, "segm_mAP_75": 0.7775, "segm_mAP_s": 0.0243, "segm_mAP_m": 0.6109, "segm_mAP_l": 0.775, "segm_mAP_copypaste": "0.7057 0.7860 0.7775 0.0243 0.6109 0.7750"}
{"mode": "val", "epoch": 28, "iter": 13, "lr": 4e-05, "bbox_mAP": 0.6122, "bbox_mAP_50": 0.8011, "bbox_mAP_75": 0.7221, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5613, "bbox_mAP_l": 0.6701, "bbox_mAP_copypaste": "0.6122 0.8011 0.7221 0.2020 0.5613 0.6701", "segm_mAP": 0.7066, "segm_mAP_50": 0.7864, "segm_mAP_75": 0.7779, "segm_mAP_s": 0.0257, "segm_mAP_m": 0.611, "segm_mAP_l": 0.7761, "segm_mAP_copypaste": "0.7066 0.7864 0.7779 0.0257 0.6110 0.7761"}
{"mode": "val", "epoch": 29, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.6119, "bbox_mAP_50": 0.8014, "bbox_mAP_75": 0.7242, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.563, "bbox_mAP_l": 0.6692, "bbox_mAP_copypaste": "0.6119 0.8014 0.7242 0.2020 0.5630 0.6692", "segm_mAP": 0.7073, "segm_mAP_50": 0.7867, "segm_mAP_75": 0.7783, "segm_mAP_s": 0.0256, "segm_mAP_m": 0.6129, "segm_mAP_l": 0.7766, "segm_mAP_copypaste": "0.7073 0.7867 0.7783 0.0256 0.6129 0.7766"}
{"mode": "val", "epoch": 30, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.6212, "bbox_mAP_50": 0.8134, "bbox_mAP_75": 0.734, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5604, "bbox_mAP_l": 0.682, "bbox_mAP_copypaste": "0.6212 0.8134 0.7340 0.2020 0.5604 0.6820", "segm_mAP": 0.7222, "segm_mAP_50": 0.7987, "segm_mAP_75": 0.7902, "segm_mAP_s": 0.0274, "segm_mAP_m": 0.6123, "segm_mAP_l": 0.7982, "segm_mAP_copypaste": "0.7222 0.7987 0.7902 0.0274 0.6123 0.7982"}
{"mode": "val", "epoch": 31, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.6219, "bbox_mAP_50": 0.8145, "bbox_mAP_75": 0.7343, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5601, "bbox_mAP_l": 0.6824, "bbox_mAP_copypaste": "0.6219 0.8145 0.7343 0.2020 0.5601 0.6824", "segm_mAP": 0.7233, "segm_mAP_50": 0.8, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.0276, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7987, "segm_mAP_copypaste": "0.7233 0.8000 0.7914 0.0276 0.6121 0.7987"}
{"mode": "val", "epoch": 32, "iter": 13, "lr": 5e-05, "bbox_mAP": 0.6252, "bbox_mAP_50": 0.8153, "bbox_mAP_75": 0.7627, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5601, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6252 0.8153 0.7627 0.2020 0.5601 0.6857", "segm_mAP": 0.7239, "segm_mAP_50": 0.8008, "segm_mAP_75": 0.792, "segm_mAP_s": 0.0277, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7991, "segm_mAP_copypaste": "0.7239 0.8008 0.7920 0.0277 0.6121 0.7991"}
{"mode": "val", "epoch": 33, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6252, "bbox_mAP_50": 0.8154, "bbox_mAP_75": 0.7627, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5601, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6252 0.8154 0.7627 0.2020 0.5601 0.6857", "segm_mAP": 0.724, "segm_mAP_50": 0.801, "segm_mAP_75": 0.792, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7992, "segm_mAP_copypaste": "0.7240 0.8010 0.7920 0.0300 0.6121 0.7992"}
{"mode": "val", "epoch": 34, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6255, "bbox_mAP_50": 0.8153, "bbox_mAP_75": 0.7654, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6255 0.8153 0.7654 0.2020 0.5616 0.6857", "segm_mAP": 0.724, "segm_mAP_50": 0.8009, "segm_mAP_75": 0.792, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7992, "segm_mAP_copypaste": "0.7240 0.8009 0.7920 0.0300 0.6121 0.7992"}
{"mode": "val", "epoch": 35, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6255, "bbox_mAP_50": 0.8154, "bbox_mAP_75": 0.7654, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6255 0.8154 0.7654 0.2020 0.5616 0.6857", "segm_mAP": 0.724, "segm_mAP_50": 0.801, "segm_mAP_75": 0.792, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7992, "segm_mAP_copypaste": "0.7240 0.8010 0.7920 0.0300 0.6121 0.7992"}
{"mode": "val", "epoch": 36, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6255, "bbox_mAP_50": 0.8154, "bbox_mAP_75": 0.7654, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6255 0.8154 0.7654 0.2020 0.5616 0.6857", "segm_mAP": 0.724, "segm_mAP_50": 0.801, "segm_mAP_75": 0.792, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6122, "segm_mAP_l": 0.7992, "segm_mAP_copypaste": "0.7240 0.8010 0.7920 0.0300 0.6122 0.7992"}
{"mode": "val", "epoch": 37, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6256, "bbox_mAP_50": 0.8156, "bbox_mAP_75": 0.7655, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6857, "bbox_mAP_copypaste": "0.6256 0.8156 0.7655 0.2020 0.5616 0.6857", "segm_mAP": 0.724, "segm_mAP_50": 0.8011, "segm_mAP_75": 0.7921, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7992, "segm_mAP_copypaste": "0.7240 0.8011 0.7921 0.0300 0.6121 0.7992"}
{"mode": "val", "epoch": 38, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6247, "bbox_mAP_50": 0.8141, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6845, "bbox_mAP_copypaste": "0.6247 0.8141 0.7643 0.2020 0.5616 0.6845", "segm_mAP": 0.7233, "segm_mAP_50": 0.8, "segm_mAP_75": 0.7911, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.798, "segm_mAP_copypaste": "0.7233 0.8000 0.7911 0.0300 0.6121 0.7980"}
{"mode": "val", "epoch": 39, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6249, "bbox_mAP_50": 0.8144, "bbox_mAP_75": 0.7645, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6845, "bbox_mAP_copypaste": "0.6249 0.8144 0.7645 0.2020 0.5616 0.6845", "segm_mAP": 0.7234, "segm_mAP_50": 0.8003, "segm_mAP_75": 0.7913, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6122, "segm_mAP_l": 0.7981, "segm_mAP_copypaste": "0.7234 0.8003 0.7913 0.0300 0.6122 0.7981"}
{"mode": "val", "epoch": 40, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6244, "bbox_mAP_50": 0.8144, "bbox_mAP_75": 0.7645, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6839, "bbox_mAP_copypaste": "0.6244 0.8144 0.7645 0.2020 0.5616 0.6839", "segm_mAP": 0.7221, "segm_mAP_50": 0.797, "segm_mAP_75": 0.7913, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7964, "segm_mAP_copypaste": "0.7221 0.7970 0.7913 0.0300 0.6121 0.7964"}
{"mode": "val", "epoch": 41, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6245, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7646, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6839, "bbox_mAP_copypaste": "0.6245 0.8146 0.7646 0.2020 0.5616 0.6839", "segm_mAP": 0.7222, "segm_mAP_50": 0.797, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6121, "segm_mAP_l": 0.7964, "segm_mAP_copypaste": "0.7222 0.7970 0.7914 0.0300 0.6121 0.7964"}
{"mode": "val", "epoch": 42, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6242, "bbox_mAP_50": 0.8143, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.683, "bbox_mAP_copypaste": "0.6242 0.8143 0.7643 0.2020 0.5616 0.6830", "segm_mAP": 0.722, "segm_mAP_50": 0.7967, "segm_mAP_75": 0.7911, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6122, "segm_mAP_l": 0.7956, "segm_mAP_copypaste": "0.7220 0.7967 0.7911 0.0300 0.6122 0.7956"}
{"mode": "val", "epoch": 43, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6241, "bbox_mAP_50": 0.8141, "bbox_mAP_75": 0.7641, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.683, "bbox_mAP_copypaste": "0.6241 0.8141 0.7641 0.2020 0.5616 0.6830", "segm_mAP": 0.7219, "segm_mAP_50": 0.7966, "segm_mAP_75": 0.791, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6122, "segm_mAP_l": 0.7956, "segm_mAP_copypaste": "0.7219 0.7966 0.7910 0.0300 0.6122 0.7956"}
{"mode": "val", "epoch": 44, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6214, "bbox_mAP_50": 0.8144, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6792, "bbox_mAP_copypaste": "0.6214 0.8144 0.7643 0.2020 0.5616 0.6792", "segm_mAP": 0.7221, "segm_mAP_50": 0.7969, "segm_mAP_75": 0.7913, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6145, "segm_mAP_l": 0.7956, "segm_mAP_copypaste": "0.7221 0.7969 0.7913 0.0300 0.6145 0.7956"}
{"mode": "val", "epoch": 45, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6215, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6793, "bbox_mAP_copypaste": "0.6215 0.8146 0.7643 0.2020 0.5616 0.6793", "segm_mAP": 0.7223, "segm_mAP_50": 0.7972, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6145, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7223 0.7972 0.7914 0.0300 0.6145 0.7957"}
{"mode": "val", "epoch": 46, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6214, "bbox_mAP_50": 0.8144, "bbox_mAP_75": 0.7641, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6793, "bbox_mAP_copypaste": "0.6214 0.8144 0.7641 0.2020 0.5616 0.6793", "segm_mAP": 0.7222, "segm_mAP_50": 0.7971, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6145, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7222 0.7971 0.7914 0.0300 0.6145 0.7957"}
{"mode": "val", "epoch": 47, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6215, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6793, "bbox_mAP_copypaste": "0.6215 0.8146 0.7643 0.2020 0.5616 0.6793", "segm_mAP": 0.7223, "segm_mAP_50": 0.7972, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6145, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7223 0.7972 0.7914 0.0300 0.6145 0.7957"}
{"mode": "val", "epoch": 48, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.6238, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6821, "bbox_mAP_copypaste": "0.6238 0.8146 0.7643 0.2020 0.5616 0.6821", "segm_mAP": 0.7223, "segm_mAP_50": 0.7972, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.0299, "segm_mAP_m": 0.6144, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7223 0.7972 0.7914 0.0299 0.6144 0.7957"}
{"mode": "val", "epoch": 49, "iter": 13, "lr": 0.0, "bbox_mAP": 0.6215, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6793, "bbox_mAP_copypaste": "0.6215 0.8146 0.7643 0.2020 0.5616 0.6793", "segm_mAP": 0.7223, "segm_mAP_50": 0.7972, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6144, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7223 0.7972 0.7914 0.0300 0.6144 0.7957"}
{"mode": "val", "epoch": 50, "iter": 13, "lr": 0.0, "bbox_mAP": 0.6215, "bbox_mAP_50": 0.8146, "bbox_mAP_75": 0.7643, "bbox_mAP_s": 0.202, "bbox_mAP_m": 0.5616, "bbox_mAP_l": 0.6793, "bbox_mAP_copypaste": "0.6215 0.8146 0.7643 0.2020 0.5616 0.6793", "segm_mAP": 0.7223, "segm_mAP_50": 0.7972, "segm_mAP_75": 0.7914, "segm_mAP_s": 0.03, "segm_mAP_m": 0.6144, "segm_mAP_l": 0.7957, "segm_mAP_copypaste": "0.7223 0.7972 0.7914 0.0300 0.6144 0.7957"}
